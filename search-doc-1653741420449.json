[{"title":"UIComponent","type":0,"sectionRef":"#","url":"api/UIComponent","content":"","keywords":""},{"title":"Functions​","type":1,"pageTitle":"UIComponent","url":"api/UIComponent#functions","content":" "},{"title":"CreateInstance​","type":1,"pageTitle":"UIComponent","url":"api/UIComponent#CreateInstance","content":"&lt;/&gt; UIComponent.CreateInstance( className: string,-- The class name of the Instance you want to create props: table-- The properties of the instance you want to create ) → Instance -- Returns a new Instance A utility for creating Instances. local cube = UIComponent.CreateInstance(&quot;BasePart&quot;, { Name = &quot;Cube&quot;, Anchored = true, Size = Vector3.new(4, 4, 4) Parent = workspace })   "},{"title":"new​","type":1,"pageTitle":"UIComponent","url":"api/UIComponent#new","content":"&lt;/&gt; UIComponent.new() → UIComponent Creates a new UIComponent class. local newComponent = UIComponent.new()   "},{"title":"Build​","type":1,"pageTitle":"UIComponent","url":"api/UIComponent#Build","content":"&lt;/&gt; UIComponent:Build() → self,...-- Returns the object and any provided arguments Build is called during the UIComponent's creation. local UIComponent = require(somewhere.UIComponent) local PersistentGui = UIComponent.new() function PersistentGui:Build() self.gui = CreateInstance(&quot;ScreenGui&quot;, { Name = &quot;PersistentGui&quot;, ResetOnSpawn = false, ZIndex = self.props.ZIndex, Parent = LOCAL_PLAYER.PlayerGui }) return tick() end local persistentGui, creationTime = MainGui.new{ ZIndex = 3 } print(&quot;Created GUI at&quot;, creationTime)   "},{"title":"Defer​","type":1,"pageTitle":"UIComponent","url":"api/UIComponent#Defer","content":"&lt;/&gt; UIComponent:Defer() → () Defer is called after Build and will not yield the thread. "}]