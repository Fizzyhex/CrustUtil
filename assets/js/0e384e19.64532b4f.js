"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),u=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(c.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),d=u(n),f=a,m=d["".concat(c,".").concat(f)]||d[f]||s[f]||o;return n?r.createElement(m,l(l({ref:t},p),{},{components:n})):r.createElement(m,l({ref:t},p))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=d;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var u=2;u<o;u++)l[u]=n[u];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},59881:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>s,frontMatter:()=>o,metadata:()=>i,toc:()=>u});var r=n(87462),a=(n(67294),n(3905));const o={},l="Getting Started",i={unversionedId:"intro",id:"intro",title:"Getting Started",description:"These utility modules can be required using Wally, a package manager built for Roblox.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/CrustUtil/docs/intro",draft:!1,editUrl:"https://github.com/Fizzyhex/CrustUtil/edit/main/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar"},c={},u=[{value:"Wally Configuration",id:"wally-configuration",level:2},{value:"Rojo Configuration",id:"rojo-configuration",level:2},{value:"Usage Example",id:"usage-example",level:2}],p={toc:u};function s(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"getting-started"},"Getting Started"),(0,a.kt)("p",null,"These utility modules can be required using ",(0,a.kt)("a",{parentName:"p",href:"https://wally.run"},"Wally"),", a package manager built for Roblox."),(0,a.kt)("h2",{id:"wally-configuration"},"Wally Configuration"),(0,a.kt)("p",null,"Once Wally is installed, run ",(0,a.kt)("inlineCode",{parentName:"p"},"wally init")," on your project directory. This will create a brand new ",(0,a.kt)("inlineCode",{parentName:"p"},"wally.toml")," file."),(0,a.kt)("p",null,"You can then add any utilities you would like to your project as dependancies. For example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-toml"},'[package]\nname = "your_name/your_project"\nversion = "0.1.0"\nregistry = "https://github.com/UpliftGames/wally-index"\nrealm = "shared"\n\n[dependencies]\nParallelComponent = "fizzyhex/parallelcomponent@0.1.0"\n')),(0,a.kt)("p",null,"To install or update these dependancies, run ",(0,a.kt)("inlineCode",{parentName:"p"},"wally install")," within your project's terminal. Wally will then create a folder called 'Packages' with all of your installed dependancies!"),(0,a.kt)("h2",{id:"rojo-configuration"},"Rojo Configuration"),(0,a.kt)("p",null,"I would suggest checking out ",(0,a.kt)("a",{parentName:"p",href:"https://sleitnick.github.io/RbxUtil/docs/intro#rojo-configuration"},"this guide by Sleitnick")," for his RbxUtil modules, which inspired this guide!"),(0,a.kt)("h2",{id:"usage-example"},"Usage Example"),(0,a.kt)("p",null,"Information about the respective packages can be found in the ",(0,a.kt)("a",{parentName:"p",href:"/api"},"API section"),"."),(0,a.kt)("p",null,"Below is an example of a script using installed dependancies:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\n-- Reference the packages folder:\nlocal Packages = ReplicatedStorage.Packages\n\n-- Require package:\nlocal UIComponent = require(Packages.UIComponent)\n\nlocal CreateInstance = UIComponent.CreateInstance\n\n-- Use the module:\nlocal Button = UIComponent.new()\n\nfunction Button:Build()\n    self.button = CreateInstance "TextButton" {\n        Size = UDim2.new(0, 200, 0, 50),\n        Text = "Click Me!"\n        TextColor3 = self.props.textColor,\n        Parent = self.props.parent\n    }\nend\n\nlocal gui = CreateInstance("ScreenGui", {Parent = LOCAL_PLAYER.PlayerGui})\n\nlocal newButton = Button{textColor = Color3.new(1, 0.5, 0.5), parent = gui}\n')))}s.isMDXComponent=!0}}]);