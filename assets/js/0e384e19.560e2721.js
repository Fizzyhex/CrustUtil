"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{59881:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return r},contentTitle:function(){return u},metadata:function(){return c},toc:function(){return s},default:function(){return d}});var a=t(87462),o=t(63366),i=(t(67294),t(3905)),l=["components"],r={},u="Getting Started",c={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Getting Started",description:"These utility modules can be required using Wally, a package manager built for Roblox.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/CrustUtil/docs/intro",editUrl:"https://github.com/Virshal/CrustUtil/edit/main/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar"},s=[{value:"Wally Configuration",id:"wally-configuration",children:[],level:2},{value:"Rojo Configuration",id:"rojo-configuration",children:[],level:2},{value:"Usage Example",id:"usage-example",children:[],level:2}],p={toc:s};function d(e){var n=e.components,t=(0,o.Z)(e,l);return(0,i.kt)("wrapper",(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"getting-started"},"Getting Started"),(0,i.kt)("p",null,"These utility modules can be required using ",(0,i.kt)("a",{parentName:"p",href:"https://wally.run"},"Wally"),", a package manager built for Roblox."),(0,i.kt)("h2",{id:"wally-configuration"},"Wally Configuration"),(0,i.kt)("p",null,"Once Wally is installed, run ",(0,i.kt)("inlineCode",{parentName:"p"},"wally init")," on your project directory. This will create a brand new ",(0,i.kt)("inlineCode",{parentName:"p"},"wally.toml")," file."),(0,i.kt)("p",null,"You can then add any utilities you would like to your project as dependancies. For example:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-toml"},'[package]\nname = "your_name/your_project"\nversion = "0.1.0"\nregistry = "https://github.com/UpliftGames/wally-index"\nrealm = "shared"\n\n[dependencies]\nUIComponent = "virshal/uicomponent@0.2.0"\n')),(0,i.kt)("p",null,"To install or update these dependancies, run ",(0,i.kt)("inlineCode",{parentName:"p"},"wally install")," within your project's terminal. Wally will then create a folder called 'Packages' with all of your installed dependancies!"),(0,i.kt)("h2",{id:"rojo-configuration"},"Rojo Configuration"),(0,i.kt)("p",null,"I would suggest checking out ",(0,i.kt)("a",{parentName:"p",href:"https://sleitnick.github.io/RbxUtil/docs/intro#rojo-configuration"},"this guide by Sleitnick")," for his RbxUtil modules, which inspired this guide!"),(0,i.kt)("h2",{id:"usage-example"},"Usage Example"),(0,i.kt)("p",null,"Information about the respective packages can be found in the ",(0,i.kt)("a",{parentName:"p",href:"/api"},"API section"),"."),(0,i.kt)("p",null,"Below is an example of a script using installed dependancies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\n-- Reference the packages folder:\nlocal Packages = ReplicatedStorage.Packages\n\n-- Require package:\nlocal UIComponent = require(ReplicatedStorage.Packages.UIComponent)\n\nlocal CreateInstance = UIComponent.CreateInstance\n\n-- Use the module:\nlocal Button = UIComponent.new()\n\nfunction Button:Build()\n    self.button = CreateInstance "TextButton" {\n        Size = UDim2.new(0, 200, 0, 50),\n        Text = "Click Me!"\n        TextColor3 = self.props.textColor,\n        Parent = self.props.parent\n    }\nend\n\nlocal gui = CreateInstance("ScreenGui", {Parent = LOCAL_PLAYER.PlayerGui})\n\nlocal newButton = Button{textColor = Color3.new(1, 0.5, 0.5), parent = gui}\n')))}d.isMDXComponent=!0}}]);