"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[671],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return f}});var r=t(67294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)t=o[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var c=r.createContext({}),u=function(e){var n=r.useContext(c),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=u(e.components);return r.createElement(c.Provider,{value:n},e.children)},s={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},d=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,o=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(t),f=a,m=d["".concat(c,".").concat(f)]||d[f]||s[f]||o;return t?r.createElement(m,i(i({ref:n},p),{},{components:t})):r.createElement(m,i({ref:n},p))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var o=t.length,i=new Array(o);i[0]=d;var l={};for(var c in n)hasOwnProperty.call(n,c)&&(l[c]=n[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,i[1]=l;for(var u=2;u<o;u++)i[u]=t[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,t)}d.displayName="MDXCreateElement"},59881:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return u},toc:function(){return p},default:function(){return d}});var r=t(87462),a=t(63366),o=(t(67294),t(3905)),i=["components"],l={},c="Getting Started",u={unversionedId:"intro",id:"intro",isDocsHomePage:!1,title:"Getting Started",description:"These utility modules can be required using Wally, a package manager built for Roblox.",source:"@site/docs/intro.md",sourceDirName:".",slug:"/intro",permalink:"/CrustUtil/docs/intro",editUrl:"https://github.com/Fizzyhex/CrustUtil/edit/main/docs/intro.md",tags:[],version:"current",frontMatter:{},sidebar:"defaultSidebar"},p=[{value:"Wally Configuration",id:"wally-configuration",children:[],level:2},{value:"Rojo Configuration",id:"rojo-configuration",children:[],level:2},{value:"Usage Example",id:"usage-example",children:[],level:2}],s={toc:p};function d(e){var n=e.components,t=(0,a.Z)(e,i);return(0,o.kt)("wrapper",(0,r.Z)({},s,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"getting-started"},"Getting Started"),(0,o.kt)("p",null,"These utility modules can be required using ",(0,o.kt)("a",{parentName:"p",href:"https://wally.run"},"Wally"),", a package manager built for Roblox."),(0,o.kt)("h2",{id:"wally-configuration"},"Wally Configuration"),(0,o.kt)("p",null,"Once Wally is installed, run ",(0,o.kt)("inlineCode",{parentName:"p"},"wally init")," on your project directory. This will create a brand new ",(0,o.kt)("inlineCode",{parentName:"p"},"wally.toml")," file."),(0,o.kt)("p",null,"You can then add any utilities you would like to your project as dependancies. For example:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-toml"},'[package]\nname = "your_name/your_project"\nversion = "0.1.0"\nregistry = "https://github.com/UpliftGames/wally-index"\nrealm = "shared"\n\n[dependencies]\nParallelComponent = "fizzyhex/parallelcomponent@0.1.0"\n')),(0,o.kt)("p",null,"To install or update these dependancies, run ",(0,o.kt)("inlineCode",{parentName:"p"},"wally install")," within your project's terminal. Wally will then create a folder called 'Packages' with all of your installed dependancies!"),(0,o.kt)("h2",{id:"rojo-configuration"},"Rojo Configuration"),(0,o.kt)("p",null,"I would suggest checking out ",(0,o.kt)("a",{parentName:"p",href:"https://sleitnick.github.io/RbxUtil/docs/intro#rojo-configuration"},"this guide by Sleitnick")," for his RbxUtil modules, which inspired this guide!"),(0,o.kt)("h2",{id:"usage-example"},"Usage Example"),(0,o.kt)("p",null,"Information about the respective packages can be found in the ",(0,o.kt)("a",{parentName:"p",href:"/api"},"API section"),"."),(0,o.kt)("p",null,"Below is an example of a script using installed dependancies:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-lua"},'local ReplicatedStorage = game:GetService("ReplicatedStorage")\n\n-- Reference the packages folder:\nlocal Packages = ReplicatedStorage.Packages\n\n-- Require package:\nlocal UIComponent = require(Packages.UIComponent)\n\nlocal CreateInstance = UIComponent.CreateInstance\n\n-- Use the module:\nlocal Button = UIComponent.new()\n\nfunction Button:Build()\n    self.button = CreateInstance "TextButton" {\n        Size = UDim2.new(0, 200, 0, 50),\n        Text = "Click Me!"\n        TextColor3 = self.props.textColor,\n        Parent = self.props.parent\n    }\nend\n\nlocal gui = CreateInstance("ScreenGui", {Parent = LOCAL_PLAYER.PlayerGui})\n\nlocal newButton = Button{textColor = Color3.new(1, 0.5, 0.5), parent = gui}\n')))}d.isMDXComponent=!0}}]);